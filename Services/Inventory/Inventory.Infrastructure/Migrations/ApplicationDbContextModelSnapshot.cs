// <auto-generated />
using System;
using System.Collections.Generic;
using Inventory.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Inventory.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Inventory.Core.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c0a802bf-4bfc-45f0-82f7-31836d5db0d7"),
                            DisplayOrder = 1,
                            Name = "Action"
                        },
                        new
                        {
                            Id = new Guid("f2e8f7e4-dfcc-4ff5-a232-f2d8c8b6d6bb"),
                            DisplayOrder = 2,
                            Name = "SciFi"
                        },
                        new
                        {
                            Id = new Guid("b70e2f35-9b9b-4267-8a49-fd4670af9074"),
                            DisplayOrder = 3,
                            Name = "History"
                        });
                });

            modelBuilder.Entity("Inventory.Core.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<List<string>>("ImageUrls")
                        .HasColumnType("text[]");

                    b.Property<double?>("ListPrice")
                        .HasColumnType("double precision");

                    b.Property<double?>("Price")
                        .HasColumnType("double precision");

                    b.Property<double?>("Price100")
                        .HasColumnType("double precision");

                    b.Property<double?>("Price50")
                        .HasColumnType("double precision");

                    b.Property<string>("Seller")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("SoldQuantity")
                        .HasColumnType("integer");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("23a8bde2-cd1f-4721-bb0f-18e27fd9a945"),
                            Author = "Billy Spark",
                            CategoryId = new Guid("c0a802bf-4bfc-45f0-82f7-31836d5db0d7"),
                            Description = "Praesent vitae sodales libero. Praesent molestie orci augue, vitae euismod velit sollicitudin ac. Praesent vestibulum facilisis nibh ut ultricies.\r\n\r\nNunc malesuada viverra ipsum sit amet tincidunt. ",
                            ISBN = "SWD9999001",
                            ImageUrls = new List<string>(),
                            ListPrice = 99.0,
                            Price = 90.0,
                            Price100 = 80.0,
                            Price50 = 85.0,
                            Seller = "alee",
                            SoldQuantity = 1,
                            StockQuantity = 10,
                            Title = "Fortune of Time"
                        },
                        new
                        {
                            Id = new Guid("ca9b37f1-5b3a-489f-8f79-8aebfa13c80f"),
                            Author = "Nancy Hoover",
                            CategoryId = new Guid("c0a802bf-4bfc-45f0-82f7-31836d5db0d7"),
                            Description = "Praesent vitae sodales libero. Praesent molestie orci augue, vitae euismod velit sollicitudin ac. Praesent vestibulum facilisis nibh ut ultricies.\r\n\r\nNunc malesuada viverra ipsum sit amet tincidunt. ",
                            ISBN = "CAW777777701",
                            ImageUrls = new List<string>(),
                            ListPrice = 40.0,
                            Price = 30.0,
                            Price100 = 20.0,
                            Price50 = 25.0,
                            Seller = "alee",
                            SoldQuantity = 1,
                            StockQuantity = 10,
                            Title = "Dark Skies"
                        },
                        new
                        {
                            Id = new Guid("8cfab7e6-78a0-4a4f-9474-5cf7d724ee69"),
                            Author = "Julian Button",
                            CategoryId = new Guid("c0a802bf-4bfc-45f0-82f7-31836d5db0d7"),
                            Description = "Praesent vitae sodales libero. Praesent molestie orci augue, vitae euismod velit sollicitudin ac. Praesent vestibulum facilisis nibh ut ultricies.\r\n\r\nNunc malesuada viverra ipsum sit amet tincidunt. ",
                            ISBN = "RITO5555501",
                            ImageUrls = new List<string>(),
                            ListPrice = 55.0,
                            Price = 50.0,
                            Price100 = 35.0,
                            Price50 = 40.0,
                            Seller = "alee",
                            SoldQuantity = 1,
                            StockQuantity = 10,
                            Title = "Vanish in the Sunset"
                        },
                        new
                        {
                            Id = new Guid("2d8bf6a5-d582-4a70-89f1-abc914cc48b9"),
                            Author = "Abby Muscles",
                            CategoryId = new Guid("f2e8f7e4-dfcc-4ff5-a232-f2d8c8b6d6bb"),
                            Description = "Praesent vitae sodales libero. Praesent molestie orci augue, vitae euismod velit sollicitudin ac. Praesent vestibulum facilisis nibh ut ultricies.\r\n\r\nNunc malesuada viverra ipsum sit amet tincidunt. ",
                            ISBN = "WS3333333301",
                            ImageUrls = new List<string>(),
                            ListPrice = 70.0,
                            Price = 65.0,
                            Price100 = 55.0,
                            Price50 = 60.0,
                            Seller = "rahul",
                            SoldQuantity = 1,
                            StockQuantity = 10,
                            Title = "Cotton Candy"
                        },
                        new
                        {
                            Id = new Guid("c888a209-d6fb-4b36-a9d1-bcf91508d5b1"),
                            Author = "Ron Parker",
                            CategoryId = new Guid("f2e8f7e4-dfcc-4ff5-a232-f2d8c8b6d6bb"),
                            Description = "Praesent vitae sodales libero. Praesent molestie orci augue, vitae euismod velit sollicitudin ac. Praesent vestibulum facilisis nibh ut ultricies.\r\n\r\nNunc malesuada viverra ipsum sit amet tincidunt. ",
                            ISBN = "SOTJ1111111101",
                            ImageUrls = new List<string>(),
                            ListPrice = 30.0,
                            Price = 27.0,
                            Price100 = 20.0,
                            Price50 = 25.0,
                            Seller = "rahul",
                            SoldQuantity = 1,
                            StockQuantity = 10,
                            Title = "Rock in the Ocean"
                        },
                        new
                        {
                            Id = new Guid("e0b095e5-278d-4425-8e62-c108a1dbde30"),
                            Author = "Laura Phantom",
                            CategoryId = new Guid("b70e2f35-9b9b-4267-8a49-fd4670af9074"),
                            Description = "Praesent vitae sodales libero. Praesent molestie orci augue, vitae euismod velit sollicitudin ac. Praesent vestibulum facilisis nibh ut ultricies.\r\n\r\nNunc malesuada viverra ipsum sit amet tincidunt. ",
                            ISBN = "FOT000000001",
                            ImageUrls = new List<string>(),
                            ListPrice = 25.0,
                            Price = 23.0,
                            Price100 = 20.0,
                            Price50 = 22.0,
                            Seller = "rahul",
                            SoldQuantity = 1,
                            StockQuantity = 10,
                            Title = "Leaves and Wonders"
                        });
                });

            modelBuilder.Entity("Inventory.Core.Entities.Product", b =>
                {
                    b.HasOne("Inventory.Core.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
